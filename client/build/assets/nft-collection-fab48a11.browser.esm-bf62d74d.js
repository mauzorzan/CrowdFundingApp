var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{cR as l,a1 as C,v as W,d1 as f,a2 as w,bk as y,b4 as T,o,T as R}from"./index-f129da69.js";import{a as b,b as S,G as E,C as A}from"./contract-appuri-11efae43.browser.esm-a9abb4b3.js";import{C as B}from"./contract-interceptor-d7b164a7.browser.esm-7eabd2ea.js";import{C as v,a as M}from"./contract-owner-463333cb.browser.esm-19e4b67c.js";import{C as O}from"./contract-platform-fee-6cd82ace.browser.esm-85035a3e.js";import{C as k}from"./contract-roles-b0fa3fbf.browser.esm-2bf7bfc9.js";import{C as I}from"./contract-sales-d7efa59e.browser.esm-3598eca2.js";import{S as P}from"./erc-721-standard-6dd2a1f2.browser.esm-75da487a.js";import{a as x}from"./erc-721-9b7a4cd5.browser.esm-7d5e00bd.js";import"./setErc20Allowance-08d8826c.browser.esm-dbade3d7.js";import"./QueryParams-72049a45.browser.esm-d808e352.js";import"./index-c254bf1e.js";import"./treeify-361aa23a.js";import"./assertEnabled-3403e0f7.browser.esm-f60dea04.js";import"./drop-claim-conditions-06383a7e.browser.esm-d448ac49.js";const c=class c extends P{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new C(t,r,i,h,n);super(u,n,m);e(this,"mint",o(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",o(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",o(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",o(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",o(t=>this.erc721.burn.prepare(t)));this.abi=W.parse(i||[]),this.metadata=new b(this.contractWrapper,f,this.storage),this.app=new S(this.contractWrapper,this.metadata,this.storage),this.roles=new k(this.contractWrapper,c.contractRoles),this.royalties=new v(this.contractWrapper,this.metadata),this.sales=new I(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new E(this.contractWrapper),this.events=new A(this.contractWrapper),this.platformFees=new O(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new x(this.contractWrapper,this.storage),this.owner=new M(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[y("transfer"),T])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return R.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};e(c,"contractRoles",l);let p=c;export{p as NFTCollection};
